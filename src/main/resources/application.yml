server:
  port: 0

eureka:
  client:
    healthcheck.enabled: true
    registerWithEureka: true       # Register this application as a Eureka client with the Eureka server
    fetchRegistry: true            # Fetch the registry information from Eureka (needed for service discovery)
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}

  instance:
#    instance-id: ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${server.port}}
    instance-id: ${spring.application.name}:${random.uuid}
    #prefer-ip-address: true  # (Optional) If true, Eureka will register the IP address instead of hostname
    lease-renewal-interval-in-seconds: 1  # Frequency (in seconds) at which this client sends heartbeats to Eureka
    lease-expiration-duration-in-seconds: 2  # How long Eureka will wait without receiving a heartbeat before evicting the instance

spring:
  application:
    name: eureka-client
